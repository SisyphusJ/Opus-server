<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.opus.feature.comment.mapper.CommentMapper">

    <insert id="insertComment">
        INSERT INTO comments (pin_id, member_id, top_level_comment_id, level, content, parent_nickname)
        values (#{pinId}, #{memberId}, #{topLevelCommentId}, #{level}, #{content}, #{parentNickname})
    </insert>

    <select id="selectCommentsByPinId" resultMap="commentList">
        SELECT comment_id,
               pin_id,
               comments.member_id,
               top_level_comment_id,
               level,
               content,
               created_at,
               updated_at,
               deleted_at,
               parent_nickname,
               member.nickname
        FROM comments
                 INNER JOIN member ON comments.member_id = member.member_id
        WHERE comments.pin_id = #{pinId}
          and comments.is_deleted = 0
        ORDER BY comment_id ASC, level ASC
    </select>

    <select id="selectCommentsByMemberId" resultMap="commentList">
        SELECT comment_id,
               pin_id,
               comments.member_id,
               top_level_comment_id,
               level,
               content,
               created_at,
               updated_at,
               deleted_at,
               parent_nickname,
               member.nickname
        FROM comments
                 INNER JOIN member ON comments.member_id = member.member_id
        WHERE comments.member_id = #{memberId}
          and comments.is_deleted = 0
        ORDER BY comment_id ASC, level ASC
    </select>

    <select id="selectCommentByCommentId" resultMap="commentList">
        SELECT comment_id,
               pin_id,
               comments.member_id,
               top_level_comment_id,
               level,
               content,
               created_at,
               updated_at,
               deleted_at,
               parent_nickname,
               member.nickname
        FROM comments
                 INNER JOIN member ON comments.member_id = member.member_id
        WHERE comment_id = #{commentId}
          and comments.is_deleted = 0
    </select>

    <select id="countChildCommentsByCommentId" resultType="int">
        SELECT COUNT(*)
        FROM comments
        WHERE top_level_comment_id = #{commentId}
          and comments.is_deleted = 0
    </select>

    <update id="updateComment">
        UPDATE comments
        SET content    = #{content},
            updated_at = now()
        WHERE comment_id = #{commentId}
          AND comments.member_id = #{memberId}
    </update>

    <delete id="deleteComment">
        DELETE
        FROM comments
        WHERE comment_id = #{commentId}
          AND comments.member_id = #{memberId}
    </delete>

    <resultMap id="commentList" type="com.opus.feature.comment.domain.CommentVO">
        <id property="commentId" column="comment_id"/>
        <result property="pinId" column="pin_id"/>
        <result property="memberId" column="comment.member_id"/>
        <result property="topLevelCommentId" column="top_level_comment_id"/>
        <result property="level" column="level"/>
        <result property="content" column="content"/>
        <result property="createdDate" column="created_at"/>
        <result property="updatedDate" column="updated_at"/>
        <result property="deletedDate" column="deleted_at"/>
        <result property="parentNickname" column="parent_nickname"/>
        <result property="nickname" column="member.nickname"/>
    </resultMap>

</mapper>